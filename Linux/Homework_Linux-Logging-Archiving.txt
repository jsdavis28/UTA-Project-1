Week 5 Homework Submission File: Archiving and Logging Data
Please edit this file by adding the solution commands on the line below the prompt.
Save and submit the completed file for your homework submission.
________________


Step 1: Create, Extract, Compress, and Manage tar Backup Archives
1. Command to extract the TarDocs.tar archive to the current directory:
tar -xvf TarDocs.tar
2. Command to create the Javaless_Doc.tar archive from the TarDocs/ directory, while excluding the TarDocs/Documents/Java directory:
tar --exclude='./TarDocs/Documents/Java' -cvf Javaless_Docs.tar ./TarDocs
3. Command to ensure Java/ is not in the new Javaless_Docs.tar archive:
tar -tvf Javaless_Docs.tar | grep 'Java'
Bonus
* Command to create an incremental archive called logs_backup_tar.gz with only changed files to snapshot.file for the /var/log directory:
Create initial level 0  archive to Backup directory in ~/Projects, 
sudo tar -czvg ./Backup/snapshot.file -f ./Backup/logs_backup.tar.gz /var/log
Critical Analysis Question
* Why wouldn't you use the options -x and -c at the same with tar?
-x extracts the specified archive file and -c creates an archive file. 
________________


________________
Step 2: Create, Manage, and Automate Cron Jobs
1. Cron job for backing up the /var/log/auth.log file:
0 6 * * WED tar -czf /home/sysadmin/Projects/auth_backup.tgz /var/log/auth.log


________________








Step 3: Write Basic Bash Scripts
1. Brace expansion command to create the four subdirectories:
mkdir -p ~/backups/{freemem,diskuse,openlist,freedisk}


2. Paste your system.sh script edits below:
#!/bin/bash


today=$(date)


#Print free memory to ~/backups/freemem/free_mem.txt
printf "\nSystem Free memory $today\n" >> ./backups/freemem/free_mem.txt
free -mh >> ./backups/freemem/free_mem.txt


#Print disk usage to ~/backups/diskuse/disk_usage.txt
printf "\nSystem Disk Usage $today\n" >> ./backups/diskuse/disk_usage.txt
du -h >> ./backups/diskuse/disk_usage.txt


#List open files and print to ~/backups/openlist/open_list.txt
printf "\nOpen Files $today\n" >> ./backups/openlist/open_list.txt
ps aux >> ./backups/openlist/open_list.txt


#Print file system disk space stats to ~/backups/freedisk/free_disk.txt
printf "\nFile System Disk Space Stats $today\n" >> ./backups/freedisk/free_disk.txt
df -h >> ./backups/freedisk/free_disk.txt




3. Command to make the system.sh script executable:
Chmod +x system.sh
Optional
* Commands to test the script and confirm its execution:
sudo ./system.sh 
Bonus
* Command to copy system to system-wide cron directory:


________________


________________
Step 4. Manage Log File Sizes
1. Run sudo nano /etc/logrotate.conf to edit the logrotate configuration file.
Configure a log rotation scheme that backs up authentication messages to the /var/log/auth.log.


   * Add your config file edits below:
   2. [Your logrotate scheme edits here]
________________


Bonus: Check for Policy and File Violations
   1. Command to verify auditd is active:
   2. Command to set number of retained logs and maximum log file size:
   * Add the edits made to the configuration file below:
   3. [Your solution edits here]
   4. Command using auditd to set rules for /etc/shadow, /etc/passwd and /var/log/auth.log:
   * Add the edits made to the rules file below:
   5. [Your solution edits here]
   6. Command to restart auditd:
   7. Command to list all auditd rules:
   8. Command to produce an audit report:
   9. Create a user with sudo useradd attacker and produce an audit report that lists account modifications:
   10. Command to use auditd to watch /var/log/cron:
   11. Command to verify auditd rules:
________________


Bonus (Research Activity): Perform Various Log Filtering Techniques
   1. Command to return journalctl messages with priorities from emergency to error:
   2. Command to check the disk usage of the system journal unit since the most recent boot:
   3. Comand to remove all archived journal files except the most recent two:
   4. Command to filter all log messages with priority levels between zero and two, and save output to /home/sysadmin/Priority_High.txt:
   5. Command to automate the last command in a daily cronjob. Add the edits made to the crontab file below:
[Your solution cron edits here]