#!/bin/bash 

#dealerAnalysis.sh accepts a list of suspected shift times and dates to isolate the roulette dealer working at that time.
    #A raw data set (generated by playerAnalysis.sh) located in the same directory as this script and provided work schedules will compare 
    #identified incidents against the scheduled roulette dealer, with summary results output to the file Dealers_working_during_losses. 
    #Analysis results will output to the file Notes_Dealer_Analysis

#print status
printf "Analyzing data\n"

#compile all submitted schedules into the file dealer_shifts, with filename as date stamp 
grep : * --exclude='*.sh' --exclude='loss_data' > dealer_shifts

#set line delimiter on for loop
IFS=$'\n'

#initialize dealer list
dealerList=()

#initialize shift count
shifts=0

#analyze each shift from data_loss file and compiled dealer_shifts file (Lucky_Duck_Investigations/Roulette_Loss_Investigation/Dealer_Analysis) 
printf "\nIdentified Roulette Shifts\n" | tee -a Dealers_working_during_losses
printf "\nDate      Time        First and Last Name\n" | tee -a Dealers_working_during_losses
for loss in $(cat loss_data); do 
    #get loss date and loss time 
    lossDate=$( echo $loss | cut -d "_" -f1 )
    lossTime=$( echo $loss | cut -d$'\t'  -f1 | cut -d ":" -f2-4 | sed 's/ //g' )

    #compare loss date and time to dealer_shifts
    for line in $(cat dealer_shifts); do 
        #get shift date
        shiftDate=$( echo $line | cut -d "_" -f1 ) 

        #compare to provided loss file
        if [[ $shiftDate == $lossDate ]]; then 
            #get shift time
            shiftTime=$( echo $line | cut -d$'\t'  -f1 | cut -d ":" -f2-4 | sed 's/ //g' )

            #compare to provided loss file
            if [[ $shiftTime == $lossTime ]]; then
                #get dealer
                dealer=$( echo $line | awk '{print $5 " " $6}' ) 

                #add each new dealer to the dealer list
                if ! [[ ${dealerList[*]} =~ "$dealer" ]]; then 
                    dealerList+=( $dealer ) 
                fi

                #print results to Notes_Dealer_Analysis
                printf "$lossDate   $lossTime       $dealer\n" | tee -a Dealers_working_during_losses

                #increment shift count
                ((shifts++))
            fi
        fi
    done 
done

#copy shift results to Notes_Dealer_Analysis file
cat Dealers_working_during_losses >> Notes_Dealer_Analysis

#list number of identified shift incidents
printf "\n\nTotal number of incidents: $shifts\n" | tee -a Notes_Dealer_Analysis

#list number of unique dealers
printf "\n\nTotal unique dealers: ${#dealerList[@]}\n" | tee -a Notes_Dealer_Analysis

#print status
printf "\nAnalysis complete in file Notes_Dealer_Analysis\n" 
